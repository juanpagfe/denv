#!/bin/bash

TMUX_PATH="$HOME/.config/tmux" 
FZFDIRS="$TMUX_PATH/fzfdirs" 
COMMAND="list"
VALID_COMMANDS=("list" "add" "drop" "session")
NAMED=""

usage() {
    echo "This is an implementation of a tmux-sessionizer with dynamic folders"
    echo "Usage: $0 [options] <argument>"
    echo "Options:"
    echo "  -h, --help             Show this help message"
    echo "  -a, --add  <directory> Directory to add for the fzf"
    echo "  -n, --name <name>      Name of the session"
    echo "  -l, --list             List directories to fzf"
    echo "  -d, --drop             Drop a directory"
}

not_in_array() {
    local val="$1"; shift
    for item; do [[ "$item" == "$val" ]] && return 1; done
    return 0
}

list_dirs() {
    cat -n "$FZFDIRS"
}

add_dir() {
    if [ ! -d "$TMUX_PATH" ]; then
        mkdir -p "$TMUX_PATH"
    fi
    if [ ! -f "$FZFDIRS" ]; then
        touch "$FZFDIRS" 
    fi
    if [ ! -d "$1" ]; then
        echo "If you are adding, you must give a directory"
        usage
        exit 1
    fi
    echo "$1" >> "$FZFDIRS"
    list_dirs
}

drop_dir() {
    cat -n "$FZFDIRS"
    fnumber=$(grep -c '' "$FZFDIRS")
    read -p "Enter a directory number to remove [Default: 0 (None)]: " num
    if [[ ! "$num" =~ ^[0-9]+$ || "$num" -le 1 || "$num" -gt $fnumber ]]; then
        num=0
    fi
    if [ "$num" -ne 0 ]; then
        echo "Removing:"
        sed -n "${num}p" "$FZFDIRS"
        sed -i '' "${num}d" "$FZFDIRS"
    else
        echo "None removed"
        exit 0
    fi
}

switch_to() {
    if [[ -z $TMUX ]]; then
        tmux attach-session -t $1
    else
        tmux switch-client -t $1
    fi
}

has_session() {
    tmux list-sessions | grep -q "^$1:"
}

sessionizer() {
    if [[ -z $NAMED ]]; then
        if [[ $# -eq 1 ]]; then
            selected=$1
        else
            selected=$(cat "$FZFDIRS" | xargs -I {} bash -c 'find $(eval echo {}) -mindepth 1 -maxdepth 1 -type d' | fzf)
        fi
        selected_name=$(basename "$selected" | tr . _)
    else
        selected="~"
        read -rp "Session name: " selected_name
    fi

    if [[ -z $selected ]]; then
        exit 0
    fi

    tmux_running=$(pgrep tmux)

    if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
        tmux new-session -s $selected_name -c $selected
        exit 0
    fi

    if ! has_session $selected_name; then
        tmux new-session -ds $selected_name -c $selected
    fi

    switch_to $selected_name
}

#Checks if command exists
COMMAND="$1"
if [[ -z "$COMMAND" ]]; then
    usage
fi
shift

#Checks if command is valid
if not_in_array "$COMMAND" "${VALID_COMMANDS[@]}"; then
    (IFS=", "; log_error "Unexpected command '$COMMAND' (Valid: ${VALID_COMMANDS[*]}).")
    usage
fi

while [[ $# -gt 0 ]]; do
    case "$1" in
        -n|--named)
            NAMED="1"
            shift 1
            ;;
        -h|--help)
            usage
            shift
            exit 0
            ;;
        *)
            sessionizer $@
            shift 
            break
            ;;
    esac
done

if [[ "$COMMAND" == "add" ]]; then
    add_dir $1
fi

if [[ "$COMMAND" == "drop" ]]; then
    drop_dir $1
fi

if [[ "$COMMAND" == "list" ]]; then
    list_dirs
fi

if [[ "$COMMAND" == "session" ]]; then
    sessionizer $@
fi
